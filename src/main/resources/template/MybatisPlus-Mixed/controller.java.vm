##Import macro definition
$!{define.vm}

##Set table suffix (macro definition)
#setTableSuffix("Controller")

##Save file (macro definition)
#save("/controller", "Controller.java")

##Package path (macro definition)
#setPackageSuffix("controller")

##Define service name
#set($serviceName = $!tool.append($!tool.firstLowerCase($!tableInfo.name), "Service"))

##Define entity object name
#set($entityName = $!tool.firstLowerCase($!tableInfo.name))

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.extension.api.ApiController;
import com.baomidou.mybatisplus.extension.api.R;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import $!{tableInfo.savePackageName}.entity.$!tableInfo.name;
import $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;
import org.springframework.web.bind.annotation.*;

import javax.annotation.Resource;
import java.io.Serializable;
import java.util.List;

##Table Comments (Macro Definitions)
#tableComment("Table control layer")
@RestController
@RequestMapping("$!tool.firstLowerCase($!tableInfo.name)")
public class $!{tableName} extends ApiController {
    /**
     * Service object
     */
    @Resource
    private $!{tableInfo.name}Service $!{serviceName};

    /**
     * Query all data in pagination
     *
     * @param page Paging object
     * @param $!entityName Query entity
     * @return All data
     */
    @GetMapping
    public R selectAll(Page<$!tableInfo.name> page, $!tableInfo.name $!entityName) {
        return success(this.$!{serviceName}.page(page, new QueryWrapper<>($!entityName)));
    }

    /**
     * Query a single piece of data by primary key
     *
     * @param id Primary key
     * @return Single data
     */
    @GetMapping("{id}")
    public R selectOne(@PathVariable Serializable id) {
        return success(this.$!{serviceName}.getById(id));
    }

    /**
     * Add data
     *
     * @param $!entityName Entity object
     * @return New result
     */
    @PostMapping
    public R insert(@RequestBody $!tableInfo.name $!entityName) {
        return success(this.$!{serviceName}.save($!entityName));
    }

    /**
     * Change the data
     *
     * @param $!entityName Entity object
     * @return Modify results
     */
    @PutMapping
    public R update(@RequestBody $!tableInfo.name $!entityName) {
        return success(this.$!{serviceName}.updateById($!entityName));
    }

    /**
     * Delete data
     *
     * @param idList Primary key binding
     * @return Delete result
     */
    @DeleteMapping
    public R delete(@RequestParam("idList") List<Long> idList) {
        return success(this.$!{serviceName}.removeByIds(idList));
    }
}
