##Define initial variables
#set($tableName = $tool.append($tableInfo.name, "Dao"))
##Set callback
$!callback.setFileName($tool.append($tableName, ".java"))
$!callback.setSavePath($tool.append($tableInfo.savePath, "/dao"))

##Get the primary key
#if(!$tableInfo.pkColumn.isEmpty())
    #set($pk = $tableInfo.pkColumn.get(0))
#end

#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}dao;

import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};
import org.apache.ibatis.annotations.Param;
import org.springframework.data.domain.Pageable;
import java.util.List;

/**
 * $!{tableInfo.comment}($!{tableInfo.name}) Table database access layer
 *
 * @author $!author
 * @since $!time.currTime()
 */
public interface $!{tableName} {

    /**
     * Query a single piece of data by ID
     *
     * @param $!pk.name Primary key
     * @return Instance object
     */
    $!{tableInfo.name} queryById($!pk.shortType $!pk.name);

    /**
     * Query the specified row data
     *
     * @param $!tool.firstLowerCase($!{tableInfo.name}) Query conditions
     * @param pageable       Paging object
     * @return List objects
     */
    List<$!{tableInfo.name}> queryAllByLimit($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}), @Param("pageable") Pageable pageable);

    /**
     * Count the total number of rows
     *
     * @param $!tool.firstLowerCase($!{tableInfo.name}) Query conditions
     * @return total number of rows
     */
    long count($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}));

    /**
     * Add data
     *
     * @param $!tool.firstLowerCase($!{tableInfo.name}) Instance object
     * @return Number of rows affected
     */
    int insert($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}));

    /**
     * Add data in batches (MyBatis native foreach method)
     *
     * @param entities List<$!{tableInfo.name}> List of instance objects
     * @return Number of rows affected
     */
    int insertBatch(@Param("entities") List<$!{tableInfo.name}> entities);

    /**
     * Batch add or update data by primary key (MyBatis native foreach method)
     *
     * @param entities List<$!{tableInfo.name}> List of instance objects
     * @return Number of rows affected
     * @throws org.springframework.jdbc.BadSqlGrammarException When the input parameter is an empty List, an exception to SQL statement error will be thrown, please verify the input parameter by yourself
     */
    int insertOrUpdateBatch(@Param("entities") List<$!{tableInfo.name}> entities);

    /**
     * Change the data
     *
     * @param $!tool.firstLowerCase($!{tableInfo.name}) Instance object
     * @return Number of rows affected
     */
    int update($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}));

    /**
     * Delete data by primary key
     *
     * @param $!pk.name Primary key
     * @return Number of rows affected
     */
    int deleteById($!pk.shortType $!pk.name);
}
